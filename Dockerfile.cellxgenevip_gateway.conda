FROM yuedocker657/share:linuxbase_1

# Download latest version cellxgeneVIP
RUN git clone https://github.com/interactivereport/cellxgene_VIP.git

# Move into cellxgene_VIP directory
WORKDIR /cellxgene_VIP

# Switch to bash terminal to run "conda" commands
SHELL ["/bin/bash", "-c"]

# Start to install cellxgeneVIP and dependencies
RUN source /opt/conda/etc/profile.d/conda.sh && \
    conda config --set channel_priority flexible && \
    # Create and activate conda envirnment
    conda env create -n VIP --file VIP_conda_R.yml && \
    conda clean -afy && \
    conda activate VIP && \
    apt-get install -y cmake && \
    apt-get clean && \
    # Install VIP plugin
    ./config.sh && \
	  export LIBARROW_MINIMAL=false && \
    # Install R Packages and dependencies
    conda install -y -c conda-forge r-curl curl libcurl r-ragg && \
    R -q -e 'if(!require(devtools)) install.packages("devtools",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(Cairo)) devtools::install_version("Cairo",version="1.5-12",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(foreign)) devtools::install_version("foreign",version="0.8-76",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(ggrastr)) devtools::install_version("ggrastr",version="0.1.9",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(rjson)) devtools::install_version("rjson",version="0.2.20",repos="https://cran.us.r-project.org")' && \
    R -q -e 'if(!require(arrow)) devtools::install_version("arrow",version="2.0.0",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(Seurat)) devtools::install_version("Seurat",version="3.2.3",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(rmarkdown)) devtools::install_version("rmarkdown",version="2.5",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(tidyverse)) devtools::install_version("tidyverse",version="1.3.0",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(viridis)) devtools::install_version("viridis",version="0.5.1",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(hexbin)) devtools::install_version("hexbin",version="1.28.2",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(ggforce)) devtools::install_version("ggforce",version="0.3.3",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(Rcpproll)) devtools::install_version("RcppRoll",version="0.3.0",repos = "http://cran.r-project.org")' && \
    R -q -e 'if(!require(fastmatch)) devtools::install_version("fastmatch",version="1.1-3",repos = "http://cran.r-project.org")' && \
    R -q -e 'if(!require(Biocmanager)) devtools::install_version("BiocManager",version="1.30.10",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(fgsea)) BiocManager::install("fgsea")' && \
    R -q -e 'if(!require(ComplexHeatmap)) BiocManager::install("ComplexHeatmap")' && \
    R -q -e 'if(!require(rtracklayer)) BiocManager::install("rtracklayer")' && \
    R -q -e 'if(!require(ggpubr)) install.packages("ggpubr",version="0.4.0",repos = "http://cran.us.r-project.org")' && \
    # Update anndata to 0.8.0
    pip install anndata==0.8.0 && \
    # Remove unused packages
    conda clean -afy

RUN source /opt/conda/etc/profile.d/conda.sh && \
    conda config --set channel_priority flexible && \
    conda activate VIP && \
    R -q -e 'if(!require(lattice)) devtools::install_version("lattice",version="0.20-41",repos = "http://cran.us.r-project.org")' && \
    R -q -e 'if(!require(reticulate)) install.packages("reticulate",repos = "http://cran.us.r-project.org")' && \
    Rscript -e 'reticulate::py_config()' && \
    export RETICULATE_PYTHON=`which python` && \
    # Remove unused packages
    conda clean -afy

# Install cellxgene_gateway
RUN source /opt/conda/etc/profile.d/conda.sh && \
    conda config --set channel_priority flexible && \
    conda activate VIP && \    
    pip install cellxgene-gateway==0.3.9 && \
    conda clean -afy

WORKDIR /

# Prepare environment for launch
ENV PATH /opt/conda/envs/VIP/bin:$PATH
ENV CONDA_DEFAULT_ENV VIP
ENV CELLXGENE_DATA=/cellxgene-data
ENV CELLXGENE_LOCATION=/opt/conda/envs/VIP/bin/cellxgene
SHELL ["conda", "run", "--no-capture-output", "-n", "VIP", "/bin/bash", "-c"]
ENTRYPOINT ["/opt/conda/envs/VIP/bin/cellxgene-gateway"]
CMD ["cellxgene-gateway"]
